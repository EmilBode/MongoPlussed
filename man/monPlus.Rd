% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MongoStart.R
\name{monPlus}
\alias{monPlus}
\title{MongoDB client with extra functionality}
\usage{
monPlus(collection, db, url, host, port, verbose = FALSE,
  options = mongolite::ssl_options(), extraSlots = list())
}
\arguments{
\item{collection}{name of collection}

\item{db}{name of database}

\item{url}{address of the mongodb server in mongo connection string \href{http://docs.mongodb.org/manual/reference/connection-string}{URI format}}

\item{host, port}{alternatively, you can provide a host and port, which is then resolved to "mongodb://\emph{host}[:\emph{port}]
Ignored if url is given. Defaults to localhost:27017}

\item{verbose}{emit some more output}

\item{options}{additional connection options such as SSL keys/certs. See mongolite documentation}

\item{extraSlots}{list of extra slots/methods to attach to the object. Useful to keep track of additional properties,
see for example how it is used with \code{\link{OpenDockerMongo}}, and to add even more methods. If a function is supplied, it's environment is changed to inside this object.}
}
\value{
A pointer to a collection on the server. It can be interfaced using methods, or the client or col attributes.
}
\description{
Comparable to mongolite::mongo, but with a few extra methods (taggedfind, adjust), an extra RMongo-object,
and handles to the collection object and client object exposed, so you can write your own extensions
}
\section{Methods}{

The same methods as \code{\link[mongolite]{mongo}} provides, along with the following:
\describe{
\item{\code{taggedfind(qry='{}', tagfields='_id', arrayfield, sort='{}', skip=0, limit=0, handler=NULL, pagesize=1000, cachesize=5e4, verbose=verbose, stringsAsFactors=default.stringsAsFactors())}}{Find values inside documents, with pointers to the root-document, see \code{\link{taggedMongofind}}. Verbose defaults to the value given at creation of monPlus, but can be adjusted.}
\item{\code{adjust(findqry='{}', infields=c('All'), setfield='extraInfo',unboxsubf=c(), FUN, FUNvectorized=FALSE, skip=0, limit=0,pagesize=1000, verbose=verbose)}}{Adjust values in DB with FUN, see \code{\link{mongoAdjust}}}
\item{\code{lives(tempname=NULL)}}{Test if connection is still alive, and documents can be inserted, retrieved and removed. For debugging, you can apply an ID-field for a temporary inserted document, if NULL a random string is generated.}
\item{\code{iterate(query = "{}", fields = "{\"_id\":0}", sort = "{}", skip = 0, limit = 0, no_timeout = FALSE)}}{Same as the regular function in mongolite::mongo()$iterate, but with an extra option to set the timeout for a cursor off, so it stays alive when not querying for a long time. Be careful, as closing of connections is messy.}
\item{\code{count(query="{}", extensive=NA)}}{Modification of the standard-count, where if is.na(extensive) && query=="{}", no querying is done, but instead the mongo count() methods is invoked, which is a lot faster.}
}
Beside these methods, you can:
\describe{
\item{}{Access the client and collection objects themselves. In mongolite::mongo() these were hidden attributes, here you can access them directly}\cr
\item{}{Get access to the used parameters: collection (in the return called collectionname to avoid confusion with the collection-object), db (called dbname), url, host, port, verbose and options}
\item{}{Get access to extra slots you've specified with extraSlots, to add more properties and methods.}
\item{}{Get an accompanying RMongo-object, as if you called RMongo::mongoDBConnect(), so you can use for example \code{dbShowCollections(monPlus('MyCol','MyDb')$Rmongo)}}
}
They are mostly useful if you want to dig deeper into the methods
}

\references{
\code{\link[mongolite]{mongo}}\cr
\href{https://jeroen.github.io/mongolite/}{Mongolite User Manual}\cr
Jeroen Ooms (2014). The \code{jsonlite} Package: A Practical and Consistent Mapping Between JSON Data and R Objects. \emph{arXiv:1403.2805}. \url{http://arxiv.org/abs/1403.2805}
}
\seealso{
\code{\link[mongolite]{mongo}}\cr
\code{\link[RMongo]{mongoDbConnect}}
}
